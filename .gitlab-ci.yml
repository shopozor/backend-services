stages:
- lint
- fixtures-generation
- unit-test
- build
- deploy
- env-test

variables:
  PYTHON_TESTS_IMAGE: $CI_REGISTRY/shopozor/python-tests

.log_into_docker: &log_into_docker
- docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# TODO: fix this so that it uses the code of the current git, as we do for the tests!
generate-fixtures:
  variables:
    IMAGE_NAME: fixtures-generator
    CONTAINER_NAME: fixtures-generator
  stage: fixtures-generation
  image: docker:latest
  services:
  - docker:dind
  script:
  - docker build -f Dockerfile -t $IMAGE_NAME --target fixtures-app .
  - docker run --name $CONTAINER_NAME --env PYTHONDONTWRITEBYTECODE=1 $IMAGE_NAME
  - docker cp $CONTAINER_NAME:/app/fixtures ./shared/
  artifacts:
    paths:
    - $CI_PROJECT_DIR/shared/fixtures/
  after_script:
  - docker container rm $CONTAINER_NAME

build-tests:
  before_script:
  - *log_into_docker
  stage: unit-test
  image: docker:latest
  services:
  - docker:dind
  script:
  - docker build -f Dockerfile-dev -t $PYTHON_TESTS_IMAGE --target python-tests .
  - docker push $PYTHON_TESTS_IMAGE

node-unit-tests:
  stage: unit-test
  image: node:13.8.0-alpine
  script:
  - yarn && yarn bootstrap
  - yarn test:unit:ci
  artifacts:
    reports:
      junit:
      # wildcard path "**" does not work: https://gitlab.com/gitlab-org/gitlab-runner/issues/2620
      - $CI_PROJECT_DIR/frontend/*/test-reports/*.xml
      - $CI_PROJECT_DIR/backend/*/test-reports/*.xml

# TODO: probably deploy this on the k8s cluster, in a random test namespace! [with helm, not devspace]
# TODO: we should refactor the test code so that it can be run on the repo directly
hasura-unit-tests:
  before_script:
  - kubectl create namespace random-namespace
  # TODO: generate random name!
  - helm install postgres bitnami/postgresql-ha -n random-namespace -f ./backend/database-service/chart/postgres-test-values.yaml
  # TODO: set the relevant value overrides here! e.g. we need an ingress with path different from "/"; we might need something like "/random-namespace"
  - helm install api ./backend/database-service/chart -n random-namespace -f ./backend/database-service/chart/hasura-test-values.yaml --wait
  after_script:
  - kubectl delete namespace random-namespace
  stage: unit-test
  image: $PYTHON_TESTS_IMAGE
  script:
  - wait-for-it graphql-engine:8080 -t 60 -s -- ./backend/database-service/tests/entrypoint.sh graphql-engine 8080 $CI_PROJECT_DIR

# TODO: this belongs to deployment phase and needs to call deploy, not build!
# TODO: in a feature branch, I'd like to just build the images, just to see that it is working
build-services:
  stage: build
  image: shopozor/devspace
  services:
  - docker:dind
  # TODO: this is only for feature branches! for staging, we want the staging profile and we want to push the images
  script:
  - devspace build --build-sequential --skip-push -p feature-tests