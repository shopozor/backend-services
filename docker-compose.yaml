version: "3.6"
services:
  postgres:
    image: postgres:11.2-alpine
    restart: "always"
    volumes:
      - db_data:/var/lib/postgresql-11.2/data
  graphql-engine:
    build:
      context: ./database-service
      dockerfile: ./Dockerfile
      target: app
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      - postgres
    restart: "always"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
  admin-ui:
    build:
      context: admin-ui
      dockerfile: ./Dockerfile
      target: app
      args:
        GRAPHQL_API: http://graphql-engine:${API_PORT:-8080}/v1/graphql/
    ports:
      - ${UI_PORT:-4000}:4000
    depends_on:
      - graphql-engine
    restart: "no"
    entrypoint: yarn start
  fixtures-service:
    build:
      context: .
      dockerfile: ./fixtures-generator/Dockerfile
      target: app
    restart: "no"
    volumes:
      - ./fixtures:/app/fixtures
    environment:
      - PYTHONDONTWRITEBYTECODE=1
    entrypoint: ./entrypoint.sh

volumes:
  db_data:
