version: "3.6"
services:
  fixtures-service:
    build:
      context: .
      dockerfile: backend/fixtures-generator/Dockerfile
      target: builder
    image: ${PRODUCT:-shopozor}/fixtures-service:${TAG:-local}
    restart: "no"
    volumes:
      - ./backend/fixtures-generator:/app
      - ./backend/test-utils:/app/test_utils
    environment:
      - PYTHONDONTWRITEBYTECODE=1
    entrypoint: ./entrypoint.sh medium
  jest-unit-tests:
    build:
      context: .
      dockerfile: Dockerfile
      target: jest-unit-testing
    image: ${PRODUCT:-shopozor}/jest-unit-testing:${TAG:-local}
    restart: "no"
    volumes:
      - ./frontend/consumer-ui/test-reports:/app/frontend/consumer-ui/test-reports
      - ./frontend/admin-ui/test-reports:/app/frontend/admin-ui/test-reports
      - ./backend/site-generator-service/test-reports:/app/backend/site-generator-service/test-reports
  # TODO: all this here is FYI: we need to make that work on the cluster, these are integrations tests!
  database-service-tests:
    build:
      context: backend/database-service
      dockerfile: Dockerfile
      target: test
    restart: "no"
    # TODO: pack everything in the image, even the fixtures!
    volumes:
      - ./backend/database-service:/app
      - ./backend/test-utils:/app/utils
      - ./shared/fixtures:/app/fixtures
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONPATH=./tests:$PYTHONPATH
    # TODO: this will not work locally because the api.shopozor == localhost!
    #       in order to run the tests on a dev laptop, we need to deploy the test images and run them inside of the cluster!
    entrypoint: ./tests/entrypoint.sh http://api:8080/
  service-integration-tests:
    build:
      context: backend
      dockerfile: tests/Dockerfile
      target: integration-test
    restart: "no"
    # TODO: pack everything in the image, even the fixtures!
    volumes:
      - ./backend/tests:/app
      - ./backend/test-utils:/app/common_utils
      - ./shared/fixtures:/app/fixtures
      - ./shared/graphql:/app/fixtures/graphql/calls
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONPATH=./tests:$PYTHONPATH
    # TODO: this will not work locally because the api.shopozor == localhost!
    #       in order to run the tests on a dev laptop, we need to deploy the test images and run them inside of the cluster!
    entrypoint: ./entrypoint.sh http://api:8080/
  e2e-tests:
    build:
      context: frontend
      dockerfile: Dockerfile
      target: cypress-tests
      args:
        CYPRESS_VERSION: 3.8.0
    restart: "no"
    volumes:
      - .:/app
    # TODO: we need to make sure the consumer-ui / admin-ui are accessible!
    entrypoint: ./frontend/tests/entrypoint-cypress.sh e2e
