apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "chart.fullname" . }}-prepare-database
  labels:
{{ include "chart.labels" . | indent 4 }}
spec:
  template:
    spec:
      initContainers:
      - name: wait-for-hasura
        image: curlimages/curl
        env:
          - name: HASURA_HOST
            value: hasura
          - name: HASURA_PORT
            value: "8080"
        command:
          - /bin/sh
          - -c
          - |
            TIMEOUT=60
            echo "waiting $TIMEOUT for $HASURA_PORT to be ready on host $HASURA_HOST"
            for i in `seq 1 $TIMEOUT`;
            do
                echo "waiting for hasura"
                version=$(curl -s http://$HASURA_HOST:$HASURA_PORT/v1/version | grep "version")
                [ "$version" == "" ] && sleep 1 || exit 0
            done
            echo "failed waiting for $HASURA_PORT on host $HASURA_HOST" && exit 1
      containers:
      - name: {{ .Chart.Name }}-prepare-database
        image: {{ .Values.hasura.migrator.image }}
        command:
          - /bin/sh
          - -c
          - |
            mc config host add ${MINIO_ALIAS} http://${MINIO_SERVER_HOST}:${MINIO_SERVER_PORT_NUMBER} ${MINIO_SERVER_ACCESS_KEY} ${MINIO_SERVER_SECRET_KEY}
            RESULT=$?
            [ "$RESULT" -eq "0" ] || exit 1

            for bucket in food people shops ; do
              mc mb ${MINIO_ALIAS}/$bucket
              mc policy set public ${MINIO_ALIAS}/$bucket
            done
      restartPolicy: OnFailure