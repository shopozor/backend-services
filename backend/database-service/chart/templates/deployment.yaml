{{- $fullName := include "chart.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
{{ include "chart.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: HASURA_GRAPHQL_SERVER_PORT
              value: {{ .Values.service.server.port | quote }}
            # - name: HASURA_GRAPHQL_SERVER_HOST
            #   value: {{ $fullName }}
            - name: HASURA_GRAPHQL_ENABLE_CONSOLE
              value: {{ .Values.service.console.enabled | quote }}
            - name: HASURA_GRAPHQL_ENABLED_LOG_TYPES
              value: {{ .Values.service.log.enabled_types }}
            - name: HASURA_GRAPHQL_ENABLE_TELEMETRY
              value: {{ .Values.service.telemetry.enabled | quote }}
            - name: HASURA_GRAPHQL_CORS_DOMAIN
              value: {{ .Values.service.cors.domain | quote }}
            - name: HASURA_GRAPHQL_DISABLE_CORS
              value: {{ not .Values.service.cors.enabled | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.username }}
            - name: POSTGRES_DATABASE
              value: {{ .Values.postgres.database }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName }}
                  key: {{ .Values.postgres.secretKey }}
            - name: POSTGRES_HOST
              value: {{ .Values.postgres.hostname }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.port | quote }}
            - name: HASURA_GRAPHQL_DATABASE_URL
              value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DATABASE)
          ports:
            - name: http
              containerPort: {{ .Values.service.server.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
