version: "3.6"
services:
  minio:
    image: minio/minio:latest
    volumes:
      - assets_data:/data
    ports:
      - 9001:9000
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minio}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minio123}
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  minio-setup:
    image: minio/mc
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minio}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minio123}
      MINIO_ALIAS: ${MINIO_ALIAS:-minio}
      MINIO_URL: ${MINIO_URL:-http://minio:9000}
    depends_on:
      - minio
    restart: "always"
    volumes:
      - ./backend/assets-service:/app
    entrypoint: /app/scripts/initialization.sh
  postgres:
    image: postgres:11.2-alpine
    restart: "always"
    volumes:
      - db_data:/var/lib/postgresql-11.2/data
  graphql-engine:
    build:
      context: backend/database-service
      dockerfile: Dockerfile
      target: app
    image: ${PRODUCT:-shopozor}/graphql-engine:${TAG:-local}
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      - postgres
    restart: "always"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
  fixtures-service:
    build:
      context: .
      dockerfile: backend/fixtures-generator/Dockerfile
      target: app
    image: ${PRODUCT:-shopozor}/fixtures-service:${TAG:-local}
    restart: "no"
    volumes:
      - ./shared/fixtures:/app/fixtures
      - ./shared/pictures:/app/pictures
    environment:
      - PYTHONDONTWRITEBYTECODE=1
    entrypoint: ./entrypoint.sh medium
  site-generator-service:
    build:
      context: .
      dockerfile: backend/site-generator-service/Dockerfile
    image: ${PRODUCT:-shopozor}/site-generator-service:${TAG:-local}
    ports:
      - "${GENERATOR_API:-2000}:8080"
    volumes:
      - static_site_data:/dist/
    environment:
      API_PORT: 8080
      ASSETS_API: http://minio:9000
      GRAPHQL_API: http://graphql-engine:8080/v1/graphql
      OUTPUT_DIR: /dist/static
      SRC_DIR: /data/frontend/consumer-ui
    restart: "no"
    depends_on:
      - graphql-engine
  generate-site-job:
    image: curlimages/curl:latest
    depends_on:
      - site-generator-service
    command: http://site-generator-service:8080/generate

volumes:
  db_data:
  assets_data:
  static_site_data: