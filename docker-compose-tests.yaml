version: '3.6'
services:
  postgres:
    image: postgres:11.2-alpine
    restart: "always"
    volumes:
      - db_data:/var/lib/postgresql-test/data
  graphql-engine:
    image: hasura/graphql-engine:v1.0.0-beta.9
    ports:
      - 9000:8080
    depends_on:
      - postgres
    restart: "always"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
  hasura-service-tests:
    build:
      context: ./database-service
      dockerfile: ./Dockerfile
      target: integration-test
    restart: "no"
    depends_on:
      - graphql-engine
    volumes:
      - ./database-service:/app
      - ./fixtures:/app/fixtures
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONPATH=./tests:$PYTHONPATH
    entrypoint: python -m pytest --hasura-endpoint http://graphql-engine:8080 --root /app -ra --junitxml=test-report.xml
  fixtures-service:
    build:
      context: ./fixtures-generator
      dockerfile: ./Dockerfile
    restart: "no"
    volumes:
      - ./fixtures-generator:/app
      - ./fixtures:/app/fixtures
    environment:
      - PYTHONDONTWRITEBYTECODE=1
    entrypoint:
      - bash
      - -c
      - |
          ./entrypoint.sh

volumes:
  db_data:

networks:
  default:
    name: default-network